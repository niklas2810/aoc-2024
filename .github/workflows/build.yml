# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
# (Shamelessly copied from last year's project)

name: Build & Run

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  DOTNET_VERSION: 9.0.x

jobs:
  build-native:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Restore dependencies
      run: dotnet restore src/AOC2024.Cli
    - name: Build CLI
      run: dotnet publish src/AOC2024.Cli --no-restore -c Release -o deploy --nologo
    - name: Pack TAR with build
      run: tar -czvf linux-build.tar.gz -C deploy .
    - uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: linux-build.tar.gz

  determine-days:
    runs-on: ubuntu-latest
    outputs:
      days: ${{ steps.set-days.outputs.days }}
    steps:
    - uses: actions/checkout@v4
    - id: set-days
      run: |
        days=$(ls src/AOC2024.Cli/inputs/actual/*.txt src/AOC2024.Cli/inputs/example/*.txt | grep -oP '\d{2}(?=\.txt)' | sort -u | tr '\n' ',' | sed 's/,$//')
        echo "{days}={$days}"  >> $GITHUB_OUTPUT

  native-single:
    runs-on: ubuntu-latest
    needs: [build-native, determine-days]
    strategy:
      matrix:
        day: [${{ needs.determine-days.outputs.days }}]
        folder: ["actual", "example"]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: linux-build
        path: .
    - name: Extract build
      run: mkdir runtime && tar -xzvf linux-build.tar.gz -C runtime
    - name: Execute
      working-directory: runtime
      run: ./aoc2024 ${{ matrix.day }} ${{ matrix.folder }}
    name: Day ${{ matrix.day }} (${{ matrix.folder }} input)